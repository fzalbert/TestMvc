version: '3.9'

volumes:
  geoserver-data:
  geo-db-data:

services:
  
#  inventarizationapi:
#    image: inventarizationapi
#    build:
#      context: .
#      dockerfile: InventarizationApi/Dockerfile
  
  db:
    image: postgis/postgis:latest
    volumes:
      - geo-db-data:/var/lib/postgresql
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=admin
      - POSTGRES_USER=admin
      - POSTGRES_DB=inventarization
      - POSTGRES_HOST_AUTH_METHOD=trust
    healthcheck:
      test: "PGPASSWORD=${POSTGRES_PASSWORD} pg_isready -h 127.0.0.1 -U ${POSTGRES_USER} -d ${POSTGRES_DB}"

  geoserver:
    image: docker.osgeo.org/geoserver:2.23.1
    volumes:
      - geoserver-data:/opt/geoserver/data_dir
    ports:
      - "8081:8080"
    depends_on:
      db:
        condition: service_healthy
    
#  geoserver:
#    image: kartoza/geoserver:${GS_VERSION}
#    volumes:
#      - geoserver-data:/opt/geoserver/data_dir
#    ports:
#      - ${GEOSERVER_PORT}:8080
#    restart: on-failure
#    environment:
#      - GEOSERVER_DATA_DIR=${GEOSERVER_DATA_DIR}
#      - GEOWEBCACHE_CACHE_DIR=${GEOWEBCACHE_CACHE_DIR}
#      - GEOSERVER_ADMIN_PASSWORD=${GEOSERVER_ADMIN_PASSWORD}
#      - GEOSERVER_ADMIN_USER=${GEOSERVER_ADMIN_USER}
#      - STABLE_EXTENSIONS=${STABLE_EXTENSIONS}
#      - COMMUNITY_EXTENSIONS=${COMMUNITY_EXTENSIONS}
#      - GEOSERVER_CONTEXT_ROOT=${GEOSERVER_CONTEXT_ROOT}
#    depends_on:
#      db:
#        condition: service_healthy
#    healthcheck:
#      test: "curl --fail --silent --write-out 'HTTP CODE : %{http_code}\n' --output /dev/null -u ${GEOSERVER_ADMIN_USER}:'${GEOSERVER_ADMIN_PASSWORD}' http://localhost:8080/geoserver/rest/about/version.xml"
#      interval: 1m30s
#      timeout: 10s
#      retries: 3